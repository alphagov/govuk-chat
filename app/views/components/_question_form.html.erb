<%
  textarea_id ||= "#{name.parameterize}-#{SecureRandom.hex(4)}"
  value ||= nil

  maxlength = Form::CreateQuestion::USER_QUESTION_LENGTH_MAXIMUM
  presence_error_message = Form::CreateQuestion::USER_QUESTION_PRESENCE_ERROR_MESSAGE
  # After entering this percentage of the maxlength, the user will see the character count hint
  character_count_threshold = 80

  label_text = "Message"
  secondary_label_id = "#{textarea_id}-secondary_label"

  hint = "Please limit your question to #{maxlength} characters."
  hint_id = "#{textarea_id}-info" # The character-count component relies on an element with this ID being present

  error_items ||= []
  has_error ||= error_items.any?
  error_id = "#{textarea_id}-error"

  aria_described_by = []
  aria_described_by << secondary_label_id
  aria_described_by << hint_id
  aria_described_by << error_id if has_error
  aria_described_by = aria_described_by.join(" ")

  data_attributes = {
    module: "question-form",
    maxlength: maxlength,
    threshold: character_count_threshold,
    "presence-error-message": presence_error_message,
    "hint-id": hint_id,
  }

  form_group_classes = " app-c-question-form__form-group js-question-form-group"
  form_group_classes << " app-c-question-form__form-group--error" if error_items.any?

  textarea_classes = "app-c-question-form__textarea js-question-form-textarea govuk-js-character-count"
  textarea_classes << " app-c-question-form__textarea--error" if error_items.any?
%>

<%= tag.div class: "app-c-question-form js-question-form-container", data: data_attributes do %>
  <%= form_with url: url, class: "app-c-question-form__form js-question-form", data: { module: "ga4-form-tracker", ga4_form: { "event_name": "form_response", "type": "chat user input", "section": "Enter your question" } } do |f| %>
    <%= tag.ul(
      id: error_id,
      class: %w[govuk-list govuk-error-message js-question-form-errors-wrapper app-c-question-form__error-list],
      hidden: !has_error) do %>
      <% error_items.each do |error| %>
        <li class="app-c-question-form__error-message">
          <span class="govuk-visually-hidden">Error:</span>
          <%= error[:text] %>
        </li>
      <% end %>
    <% end %>

    <%= content_tag :div, class: form_group_classes do %>
      <%= content_tag :div, class: "app-c-question-form__textarea-wrapper" do %>
        <%= label_tag(
          textarea_id,
          label_text,
          class: "app-c-question-form__label govuk-visually-hidden",
        ) %>
        <%= content_tag(:span, "Enter your question (please do not share personal or sensitive information in your conversations with GOV UK chat)",
          id: secondary_label_id, class: "govuk-visually-hidden") %>

        <%# Placeholder text is not an appropriate substitute for a persistent visible label. However, for this specific use case,
          DAC recommends maintaining this convention, as users are familiar with and intuitively know how to use it %>

        <%= content_tag :div, class: "app-c-question-form__textarea-character-count-wrapper js-question-form-textarea-wrapper" do %>
          <%= text_area_tag(
            textarea_id,
            value,
            class: textarea_classes,
            aria: {
              describedby: aria_described_by,
            },
            name: name,
            placeholder: label_text,
            rows: 1,
          ) %>
        <% end %>

        <div class="govuk-visually-hidden">
          <%= render "govuk_publishing_components/components/hint", {
            id: hint_id,
            text: hint,
          } %>
        </div>
      <% end %>

      <% send_text = capture do %>
        Send
        <%= content_tag :span, "message to GOV.UK Chat",
          class: "govuk-visually-hidden" %>
      <% end %>

      <%= content_tag :div, class: "app-c-question-form__button-wrapper" do %>
        <%= render "components/blue_button", {
          text: send_text,
          question_form_button: true,
        } %>
        <%= content_tag :span, "",
          role: "alert",
          data: {
            loading_question_text: "Loading your question",
            loading_answer_text: "Generating your answer",
          },
          class: "govuk-visually-hidden js-question-form-button__response-status" %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
